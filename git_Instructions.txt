Git Instructions1. Purpose of git2. Goal tonight:a. Pull filesb. Go to another branchc. Create another branchd. Make a changee. Add and commit the changef. Merge Branchesg. Push the change3. Teach about terminal.a. cd. b. Ls. c. Chmod. d. Mkdir practicee. Cd practice4. First time using gita. Git config --global user.name “Your Name”b. Git config --global user.email you@logosidentity.com5. Beginning of gita. Git is like a sentence.b. Git initc. Git clone git@github.com:LOGOSIdentity/practice.git6. Log into github7. Security / ssh key. Public and private key.a. https://help.github.com/articles/generating-ssh-keys/b. Create the keyi. Ssh-keygen –t –rsa –b 4096 –C you@logosidentity.comii. Save it under: users/you/ssh/github_rsaiii. Press enter twicec. Ensure the key is added d. 8. Set up the repository connection9. Pull files (to do…upload files for them to pull)a. Git statusb. Break down commandi. Git (you have to tell it git otherwise the computer will think you’re talking to her.)ii. Pull (the second word is the command you’re telling git. It’s sort of like a sentence. You have your noun (git) then your verb (pull)iii. Originiv. Master10. Checkout a brancha. When you go to the library, and you want a different book, you check it out. Same with git. Let’s say you want a different branch. If the verb is checkout, what would you do?b. Git checkout (branch name)c. Show how things in that folder changed11. Branch (really cool cause everything changes)a. This copies all the files of the current branch you’re in exactly as they are.b. Git status (see where you’re at)c. Git branch –ad. Git branch –n ryan (name whatever you want)12. Add and commita. Git statusb. Git add .c. Git commit –m “This is my message”13. Move to the main brancha. Git checkout masterb. Git merge (your branch name)14. Pusha. Git push origin master